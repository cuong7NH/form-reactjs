{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","onChange","e","name","target","value","setState","id","generateID","onSubmit","preventDefault","checkForm","users","state","console","log","user","nameInput","address","addressInput","email","emailInput","phoneNumber","phoneNumberInput","password","passwordInput","push","localStorage","setItem","JSON","stringify","alert","onBlur","trim","msgAlertNameInput","msgAlertName","length","msgAlertAddressInput","msgAlertAddress","validateEmail","msgAlertEmailInput","msgAlertEmail","validatePhoneNumber","msgAlertPhoneNumberInput","msgAlertPhoneNumber","msgAlertPasswordInput","msgAlertPassword","msgAlertRePasswordInput","msgAlertRePassword","onFocus","alertName","charAt","toUpperCase","slice","this","Math","floor","random","toString","substring","s4","test","String","toLowerCase","className","htmlFor","type","placeholder","classNames","disabled","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4938d51.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\nimport classNames from 'classnames';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      id: '',\n      nameInput: '',\n      addressInput: '',\n      emailInput:  '',\n      phoneNumberInput: '',\n      passwordInput: '',\n      \n      msgAlertNameInput:'',\n      msgAlertAddressInput:'',\n      msgAlertEmailInput:'',\n      msgAlertPhoneNumberInput:'',\n      msgAlertPasswordInput:'',\n      msgAlertRePasswordInput:'',\n      msgAlertName: false,\n      msgAlertAddress: false,\n      msgAlertEmail: false,\n      msgAlertPhoneNumber: false,\n      msgAlertPassword: 0,\n      msgAlertRePassword: false,\n      users : []\n\n    }\n  }\n \n  checkForm() {\n    return ((this.state.msgAlertName) && (this.state.msgAlertAddress) && (this.state.msgAlertEmail) && (this.state.msgAlertPhoneNumber) && (this.state.msgAlertPassword === 1 || this.state.msgAlertPassword === 2) &&  (this.state.msgAlertRePassword))\n  }\n  //radom id\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + '-' +this.s4();\n  }\n\n  \n  onChange = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        id: this.generateID(),\n        [name] : value\n      });\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state.indexFocus);\n    const checkForm = this.checkForm();\n    if(checkForm) {\n      const users = this.state.users;\n      console.log('submit');\n      console.log(this.state);\n      const user = {\n        id : this.state.id,\n        name : this.state.nameInput,\n        address : this.state.addressInput,\n        email : this.state.emailInput,\n        phoneNumber : this.state.phoneNumberInput,\n        password : this.state.passwordInput\n      }\n      users.push(user)\n      this.setState({\n        users: users\n      });\n      localStorage.setItem('users', JSON.stringify(this.state.users))\n      alert('Đăng ký thành công')\n    } else {\n     \n      \n      alert('form không hợp lệ, hãy kiểm tra lại')\n      \n    }\n    \n  }\n  onBlur = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch(name) {\n      case 'nameInput': {\n        \n        if(value.trim() === '') {\n          this.setState({\n            msgAlertNameInput: 'Hãy nhập tên của bạn',\n            msgAlertName: false,\n          })\n        } \n        if(value.trim().length <= 10 && value.trim().length > 0) {\n          this.setState({\n            msgAlertNameInput: 'Hãy nhập tên đầy đủ của bạn',\n            msgAlertName: false,\n          })\n        } \n        if(value.trim().length > 10){\n          this.setState({\n            msgAlertNameInput: 'Tên của bạn rất hay!',\n            msgAlertName: true,\n          })\n        }\n        \n        break;\n      }\n      case 'addressInput': {\n        \n        if(value.trim() === '') {\n          this.setState({\n            msgAlertAddressInput: 'Hãy nhập địa chỉ của bạn',\n            msgAlertAddress: false,\n          })\n        } else {\n          this.setState({\n            msgAlertAddressInput: 'Địa chỉ nhập có chuẩn không vậy? -_-',\n            msgAlertAddress: true,\n          })\n        }\n        break;\n      }\n      case 'emailInput': {\n        \n        const testEmail  = this.validateEmail(value);\n        \n        if(testEmail) {\n          this.setState({\n            msgAlertEmailInput: 'Email hợp lệ!',\n            msgAlertEmail: true,\n          }) \n        } else {\n          this.setState({\n            msgAlertEmailInput: 'Email không hợp lệ!',\n            msgAlertEmail: false,\n          })\n        }\n        if(value.trim() === '') {\n          this.setState({\n            msgAlertEmailInput: 'Hãy nhập Email của bạn',\n            msgAlertEmail: false,\n          })\n        }\n        break;\n\n      }\n      case 'phoneNumberInput': {\n      \n        // sdt phai co 10  so\n       \n        const testPhoneNumber = this.validatePhoneNumber(value.trim());\n       \n        if(testPhoneNumber) {\n          this.setState({\n            msgAlertPhoneNumberInput: 'Số điên thoại hợp lệ!',\n            msgAlertPhoneNumber: true,\n          }) \n        } else {\n          this.setState({\n            msgAlertPhoneNumberInput: 'Số điên thoại không hợp lệ!',\n            msgAlertPhoneNumber: false,\n          }) \n        }\n        if(value.trim() === '') {\n          this.setState({\n            msgAlertPhoneNumberInput: 'Hãy nhập số điện thoại của bạn',\n            msgAlertPhoneNumber: false,\n          })\n        }\n        break;\n\n      }\n      case 'passwordInput': {\n        \n        if(value.trim() === '') {\n          this.setState({\n            msgAlertPasswordInput: 'Hãy nhập mật khẩu!',\n            msgAlertPassword: 0,\n          })\n        }\n        if(value.trim().length > 0 && value.trim().length < 8) {\n          this.setState({\n            msgAlertPasswordInput: 'Mật khẩu phải có ít nhất 8 kí tự!',\n            msgAlertPassword: 0,\n          })\n        }\n         if(value.trim().length >= 8 && value.trim().length <= 15) {\n          this.setState({\n            msgAlertPasswordInput: 'Mật khẩu có độ bảo mật trung bình',\n            msgAlertPassword: 1,\n          })\n        }\n        if(value.trim().length > 15 ) {\n          this.setState({\n            msgAlertPasswordInput: 'Mật khẩu có độ bảo mật cao',\n            msgAlertPassword: 2,\n          })\n        }\n\n\n        break;\n\n      }\n      case 'rePasswordInput': {\n      \n        if(this.state.msgAlertPassword !== 0) {\n          if(value === this.state.passwordInput) {\n            this.setState({\n              msgAlertRePasswordInput: 'Mật khẩu nhập lại trùng khớp',\n              msgAlertRePassword: true,\n            })\n          } else {\n            this.setState({\n              msgAlertRePasswordInput: 'Mật khẩu nhập lại không đúng',\n              msgAlertRePassword: false,\n            })\n          }\n        }\n        break;\n\n      }\n      default: {\n        console.log('??');\n      }\n    \n    }\n    \n  }\n  onFocus = (e) => {\n    //focus hide msg alert\n    const name = e.target.name;\n    const alertName = 'msgAlert' + name.charAt(0).toUpperCase()  + name.slice(1); // in hoa chu cai dau cua name\n    this.setState({\n      [alertName]: ''\n    })\n  }\n  validateEmail(email) {\n    const re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return re.test(String(email).toLowerCase());\n  }\n  validatePhoneNumber(phoneNumber) {\n    const re = /^\\d{10}$/;\n\n    return re.test(phoneNumber);\n  }\n\n\n\n  \n\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"head-form\">\n        <h1>CuongF</h1>\n        <p>Đăng ký để học ReactJS</p>\n      </div>\n      <form onSubmit = {this.onSubmit}>\n\n        <div className=\"form-group\"> \n          <label htmlFor=\"nameInput\">Tên đầy đủ:</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            id=\"nameInput\" name=\"nameInput\" placeholder=\"Hãy nhập tên\" \n            onChange = {this.onChange}\n            onBlur = {this.onBlur}\n            onFocus = {this.onFocus}\n            />\n          <small\n          className={classNames(\"form-text\", \"text-muted\", {'msg-alert': !this.state.msgAlertName},{'msg-success': this.state.msgAlertName} )}\n          >\n            {this.state.msgAlertNameInput}\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"addressInput\">Địa chỉ:</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            id=\"addressInput\" \n            name=\"addressInput\" \n            placeholder=\"Hãy nhập địa chỉ\" \n            onChange = {this.onChange}\n            onBlur = {this.onBlur}\n            onFocus = {this.onFocus}\n          />\n          <small \n            className={classNames(\"form-text\", \"text-muted\", {'msg-alert': !this.state.msgAlertAddress},{'msg-success': this.state.msgAlertAddress} )}\n          >\n            {this.state.msgAlertAddressInput}\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"emailInput\">Email:</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            id=\"emailInput\" \n            name=\"emailInput\" \n            placeholder=\"Hãy nhập email\" \n            onChange = {this.onChange}\n            onBlur = {this.onBlur}\n            onFocus = {this.onFocus}\n            />\n          <small  \n            className={classNames(\"form-text\", \"text-muted\", {'msg-alert': !this.state.msgAlertEmail},{'msg-success': this.state.msgAlertEmail} )}  \n          >\n            {this.state.msgAlertEmailInput}\n            </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"phoneNumberInput\">Số điện thoại:</label>\n          <input \n            type=\"tel\" \n            className=\"form-control\" id=\"phoneNumberInput\" \n            name=\"phoneNumberInput\" \n            placeholder=\"Hãy nhập số điện thoại\" \n            onChange = {this.onChange}\n            onBlur = {this.onBlur}\n            onFocus = {this.onFocus}\n            />\n          <small  \n            className={classNames(\"form-text\", \"text-muted\", {'msg-alert': !this.state.msgAlertPhoneNumber},{'msg-success': this.state.msgAlertPhoneNumber} )}\n          >\n            {this.state.msgAlertPhoneNumberInput}\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"passwordInput\">Mật khẩu:</label>\n          <input \n            type=\"password\" \n            className=\"form-control\" \n            id=\"passwordInput\" \n            name=\"passwordInput\" \n            placeholder=\"Hãy nhập mật khẩu\" \n            onChange = {this.onChange}\n            onBlur = {this.onBlur}\n            onFocus = {this.onFocus}\n            />\n            <small\n              className={classNames(\"form-text\",\"text-muted\", {'msg-alert': (this.state.msgAlertPassword === 0)},{'msg-success':(this.state.msgAlertPassword === 2)}, {'msg-warning': (this.state.msgAlertPassword === 1)})}\n            >\n              {this.state.msgAlertPasswordInput}\n            </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"rePasswordInput\">Nhập lại mật khẩu:</label>\n          <input \n            type=\"password\" \n            className=\"form-control\" \n            id=\"rePasswordInput\" \n            name=\"rePasswordInput\" \n            placeholder=\"Hãy nhập lại mật khẩu\" \n            onChange = {this.onChange}\n            onBlur = {this.onBlur}\n            onFocus = {this.onFocus}\n            disabled = {(this.state.msgAlertPassword === 0)}\n            />\n            <small\n              className={classNames(\"form-text\", \"text-muted\", {'msg-alert': !this.state.msgAlertRePassword},{'msg-success': this.state.msgAlertRePassword} )}\n            >\n              {this.state.msgAlertRePasswordInput}\n            </small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block mt-4\"\n          onClick = {this.onSubmit}\n        >Đăng ký</button>\n\n      </form>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}